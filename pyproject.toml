[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dds_glossary"
authors = [
  { name="Départ de Sentier", email="engineering@d-d-s.ch" }
]
maintainers = [
  { name="Départ de Sentier", email="engineering@d-d-s.ch" }
]
description = "Sustainability assessment classifications glossary."
readme = "README.md"
dynamic = ["version"]
# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
requires-python = ">=3.11"
dependencies = [
    "appdirs",
    "defusedxml==0.7.1",
    "fastapi",
    "fastapi-versioning",
    "jinja2",
    "lxml",
    "owlready2",
    "psycopg",
    "pydantic_settings~=2.0",
    "sentry-sdk[fastapi]",
    "SQLAlchemy>=2.0.0",
    "sqlalchemy-utils",
    "uvicorn[standard]",
    "neo4j"
]

[project.urls]
source = "https://github.com/Depart-de-Sentier/dds_glossary"
homepage = "https://github.com/Depart-de-Sentier/dds_glossary"
tracker = "https://github.com/Depart-de-Sentier/dds_glossary/issues"

[project.optional-dependencies]
# Getting recursive dependencies to work is a pain, this
# seems to work, at least for now
test = [
    "dds_glossary",
    "httpx",
    "pytest",
    "pytest-cov",
    "python-coveralls",
]
dev = [
    "alembic",
    "build",
    "httpx",
    "invoke",
    "mypy",
    "pre-commit",
    "pylint",
    "pytest",
    "pytest-cov",
    "python-coveralls",
    "setuptools",
    "sphinx",
    "sphinx-rtd-theme",
]

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = true
packages = ["dds_glossary"]

[tool.setuptools.dynamic]
version = {attr = "dds_glossary.__version__"}

[tool.pytest.ini_options]
addopts = "--cov dds_glossary --cov-report term-missing --verbose"
norecursedirs = [
    "dist",
    "build",
    ".tox"
]
testpaths = ["tests/*/*.py"]

[tool.flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = ["E203", "W503"]
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude = [
    ".tox",
    "build",
    "dist",
    ".eggs",
    "docs/conf.py",
]

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint]
max-args = 6

[tool.mypy]
ignore_missing_imports = true
